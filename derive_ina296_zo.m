function sys_fit = derive_ina296_zo(~)
    % Your frequency data (Hz)
    frequency = [
    1.12201845430196
    1.25892541179417
    1.41253754462275
    1.58489319246111
    1.77827941003892
    1.99526231496888
    2.23872113856834
    2.51188643150958
    2.81838293126445
    3.16227766016838
    3.54813389233576
    3.98107170553497
    4.46683592150963
    5.01187233627272
    5.62341325190349
    6.30957344480193
    7.07945784384138
    7.94328234724282
    8.91250938133745
    10
    11.2201845430196
    12.5892541179417
    14.1253754462275
    15.8489319246111
    17.7827941003892
    19.9526231496888
    22.3872113856834
    25.1188643150958
    28.1838293126445
    31.6227766016838
    35.4813389233576
    39.8107170553497
    44.6683592150963
    50.1187233627272
    56.2341325190349
    63.0957344480193
    70.7945784384138
    79.4328234724281
    89.1250938133746
    100
    112.201845430196
    125.892541179417
    141.253754462275
    158.489319246111
    177.827941003892
    199.526231496888
    223.872113856834
    251.188643150958
    281.838293126446
    316.227766016838
    354.813389233575
    398.107170553497
    446.683592150963
    501.187233627272
    562.341325190349
    630.957344480193
    707.945784384138
    794.328234724281
    891.250938133746
    1000
    1122.01845430196
    1258.92541179417
    1412.53754462275
    1584.89319246111
    1778.27941003892
    1995.26231496888
    2238.72113856834
    2511.88643150958
    2818.38293126446
    3162.27766016838
    3548.13389233575
    3981.07170553497
    4466.83592150963
    5011.87233627273
    5623.41325190349
    6309.57344480193
    7079.45784384138
    7943.28234724281
    8912.50938133746
    10000
    11220.1845430196
    12589.2541179417
    14125.3754462276
    15848.9319246111
    17782.7941003892
    19952.6231496888
    22387.2113856834
    25118.8643150958
    28183.8293126446
    31622.7766016838
    35481.3389233575
    39810.7170553497
    44668.3592150963
    50118.7233627273
    56234.1325190349
    63095.7344480193
    70794.5784384137
    79432.8234724282
    89125.0938133746
    1e5
    1.12201845430196e5
    1.25892541179417e5
    1.41253754462276e5
    1.58489319246111e5
    1.77827941003892e5
    1.99526231496888e5
    2.23872113856834e5
    2.51188643150958e5
    2.81838293126446e5
    3.16227766016838e5
    3.54813389233575e5
    3.98107170553497e5
    4.46683592150964e5
    5.01187233627273e5
    5.62341325190349e5
    6.30957344480193e5
    7.07945784384137e5
    7.94328234724282e5
    8.91250938133746e5
    1e6
    1.12201845430196e6
    1.25892541179417e6
    1.41253754462276e6
    1.58489319246111e6
    1.77827941003892e6
    1.99526231496888e6
    2.23872113856834e6
    2.51188643150958e6
    2.81838293126446e6
    3.16227766016838e6
    3.54813389233575e6
    3.98107170553497e6
    4.46683592150963e6
    5.01187233627272e6
    5.62341325190349e6
    6.30957344480193e6
    7.07945784384137e6
    7.94328234724282e6
    8.91250938133746e6
    1e7
    ]';  % paste your frequency vector here
    
    w = 2*pi*frequency;
    
    % Your gain data (dB)
    zo = [
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .089
    .0915
    .096
    .103
    .11
    .118
    .134
    .154
    .184
    .215
    .255
    .31
    .37
    .445
    .56
    .71
    .92
    1.15
    1.4
    1.67
    1.95
    2.2
    2.445
    2.65
    2.87
    3.1
    3.35
    3.63
    3.95
    4.35
    4.75
    5.2
    5.83
    6.45
    7.15
    7.9
    8.75
    9.5
    10.45
    11.6
    13.2
    15
    17.3
    20
    23.3
    27.2
    31.5
    37.5
    43.5
    50.8
    58.6
    66.5
    75
    81.5
    85
    88
    91.5
    95
    98.5
    102
    105
    109
    113
    117
    121
    126
    130.5
    135
    140
    145
    149
    ]';   % paste your gain vector here
    
    zo_db = 20*log10(zo);
    
    syms s
    sys_fit = 0.089*(s/(2*pi*10e3)+1)^3*(s/(2*pi*12e3)+1)/(s/(2*pi*22e3)+1)^2/(s/(2*pi*32e3)+1)*(s/(2*pi*1.9e5)+1)*(s/(2*pi*3e5)+1)/(s/(2*pi*43e3)+1)/(s/(2*pi*1.2e6)+1)/(s/(2*pi*1.3e6)+1)*(s/(2*pi*1.5e6)+1)/(s/(2*pi*1.9e6)+1)^2*(s/(2*pi*4e6)+1)^2/(s/(2*pi*8e6)+1);

    if ~nargin
        % Compute magnitude and phase of fitted system
        [zo_fit, phase_fit] = bode(tf_from_sym(sys_fit), w);
        zo_fit = squeeze(zo_fit);
        phase_fit = squeeze(phase_fit);
        
        % Create figure and axes
        figure;
        
        % Set up axes for background image
        ax = axes;
        hold on;
        
        % Set limits to match your data range
        ax.YDir = 'normal';  % flip y-axis so it's not upside down
        ax.XScale = 'log';   % semilog scale
        
        % Overlay plot on top of image
        yyaxis left
        
        semilogx(frequency, zo_fit, 'r-', 'LineWidth', 1.5); hold on;
        semilogx(frequency(1:length(zo)), zo, 'b.', 'MarkerSize', 10);
        ylabel('Z_o (\Omega)');
        ylim([min(zo_db) - .05, max(zo) + 50]);    % adjust based on your dB + phase range
        
        yyaxis right
        semilogx(frequency, phase_fit, 'g--', 'LineWidth', 1.5);
        ylabel('Phase (degrees)');
        ylim([min(phase_fit) - 10, max(phase_fit) + 10]);    % adjust based on your dB + phase range
        
        xlabel('Frequency (Hz)');
        xlim([min(frequency), max(frequency)]);
        
        legend('Fitted Mag', 'Data Mag', 'Fitted Phase', 'Location', 'Best');
        grid on;
       
        % figure;
        % rlocus(sys_fit)
    end
end